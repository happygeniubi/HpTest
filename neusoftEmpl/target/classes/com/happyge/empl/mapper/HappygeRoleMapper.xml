<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.happyge.empl.repository.HappygeRoleMapper">
  <resultMap id="BaseResultMap" type="com.happyge.empl.model.HappygeRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="timestamp" jdbcType="TIMESTAMP" property="timestamp" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="roleDescription" jdbcType="VARCHAR" property="roledescription" />
    <result column="roleLabel" jdbcType="VARCHAR" property="rolelabel" />
    <result column="creation" jdbcType="TIMESTAMP" property="creation" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, timestamp, roleName, roleDescription, roleLabel, creation, creator
  </sql>
  <select id="selectByExample" parameterType="com.happyge.empl.model.HappygeRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from happyge_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from happyge_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from happyge_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.happyge.empl.model.HappygeRoleExample">
    delete from happyge_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.happyge.empl.model.HappygeRole">
    insert into happyge_role (id, timestamp, roleName, 
      roleDescription, roleLabel, creation, 
      creator)
    values (#{id,jdbcType=BIGINT}, #{timestamp,jdbcType=TIMESTAMP}, #{rolename,jdbcType=VARCHAR}, 
      #{roledescription,jdbcType=VARCHAR}, #{rolelabel,jdbcType=VARCHAR}, #{creation,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.happyge.empl.model.HappygeRole">
    insert into happyge_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="timestamp != null">
        timestamp,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="roledescription != null">
        roleDescription,
      </if>
      <if test="rolelabel != null">
        roleLabel,
      </if>
      <if test="creation != null">
        creation,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="timestamp != null">
        #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null">
        #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="rolelabel != null">
        #{rolelabel,jdbcType=VARCHAR},
      </if>
      <if test="creation != null">
        #{creation,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.happyge.empl.model.HappygeRoleExample" resultType="java.lang.Long">
    select count(*) from happyge_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update happyge_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.timestamp != null">
        timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rolename != null">
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.roledescription != null">
        roleDescription = #{record.roledescription,jdbcType=VARCHAR},
      </if>
      <if test="record.rolelabel != null">
        roleLabel = #{record.rolelabel,jdbcType=VARCHAR},
      </if>
      <if test="record.creation != null">
        creation = #{record.creation,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update happyge_role
    set id = #{record.id,jdbcType=BIGINT},
      timestamp = #{record.timestamp,jdbcType=TIMESTAMP},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      roleDescription = #{record.roledescription,jdbcType=VARCHAR},
      roleLabel = #{record.rolelabel,jdbcType=VARCHAR},
      creation = #{record.creation,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.happyge.empl.model.HappygeRole">
    update happyge_role
    <set>
      <if test="timestamp != null">
        timestamp = #{timestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null">
        roleDescription = #{roledescription,jdbcType=VARCHAR},
      </if>
      <if test="rolelabel != null">
        roleLabel = #{rolelabel,jdbcType=VARCHAR},
      </if>
      <if test="creation != null">
        creation = #{creation,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.happyge.empl.model.HappygeRole">
    update happyge_role
    set timestamp = #{timestamp,jdbcType=TIMESTAMP},
      roleName = #{rolename,jdbcType=VARCHAR},
      roleDescription = #{roledescription,jdbcType=VARCHAR},
      roleLabel = #{rolelabel,jdbcType=VARCHAR},
      creation = #{creation,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>